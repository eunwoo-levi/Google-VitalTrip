name: Admin CI

on:
  push:
    branches: [main, develop]
    paths: ['admin/**']
  pull_request:
    branches: [main, develop]
    paths: ['admin/**']

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    name: Test & Build Admin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Vite cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/admin/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('admin/**/*.js', 'admin/**/*.ts', 'admin/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: TypeScript type check
        run: pnpm --filter admin build

      - name: ESLint check
        run: pnpm --filter admin lint

      - name: Build application
        run: pnpm --filter admin build

  security-check:
    runs-on: ubuntu-latest
    name: Security Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level=moderate

      - name: Check for outdated dependencies
        run: pnpm --filter admin outdated --format list
        continue-on-error: true